echo "🔍 Executando pre-commit hook..."

current_branch=$(git rev-parse --abbrev-ref HEAD)

if [ "$current_branch" = "main" ]; then
  echo "🚫 Branch 'main' detectada. Pulando execução dos testes."
  exit 0
fi

staged_files=$(git diff --name-only --cached --diff-filter=d)

if [ -z "$staged_files" ]; then
  echo "🚫 Nenhum arquivo staged encontrado."
  exit 0
fi

run_formatter() {
  local formatter="$1"
  local file="$2"

  if [ ! -f "$file" ]; then
    echo "⚠️ Arquivo $file não encontrado. Pulando."
    return
  fi

  echo "✨ Formatando $file com $formatter"
  docker exec -i starterkit-app $formatter "$file"
  git add "$file"
}

run_tests() {
  local coverage_mode="$1"
  echo "🧪 Executando testes para a branch '$current_branch' $coverage_mode..."

  echo "🔄 Limpando cache antes de executar os testes..."
  docker exec -i starterkit-app php artisan optimize:clear

  case "$coverage_mode" in
  "--no-coverage")
    docker exec -i starterkit-app php artisan test --env=testing --parallel || {
      echo "❌ Falha nos testes. Corrija os problemas antes de commitar."
      exit 1
    }
    ;;
  "--with-coverage")
    docker exec -i starterkit-app php artisan test --env=testing --parallel \
      --log-junit=tests/coverage/results.xml \
      --coverage-clover=tests/coverage/clover.xml || {
      echo "❌ Falha nos testes. Corrija os problemas antes de commitar."
      exit 1
    }
    git add tests/coverage/results.xml tests/coverage/clover.xml
    echo "✅ Relatórios adicionados ao commit."
    ;;
  esac
}

for file in $staged_files; do
  if [ ! -f "$file" ]; then
    echo "⚠️ Arquivo $file não encontrado. Pulando."
    continue
  fi

  case "$file" in
  *.php) run_formatter "./vendor/bin/pint" "$file" ;;
  *.js | *.vue) run_formatter "npm run lint" "$file" ;;
  esac
done

echo "🔧 Executando análise do PHPStan..."
docker exec -i starterkit-app ./vendor/bin/phpstan analyse

[ "$current_branch" = "hml" ] && run_tests "--no-coverage" && exit 0
[ "$current_branch" = "dev" ] && run_tests "--with-coverage" && exit 0

echo "📂 Branch auxiliar detectada. Executando testes com cobertura."
run_tests "--with-coverage"

echo "✅ Pre-commit hook finalizado com sucesso!"
