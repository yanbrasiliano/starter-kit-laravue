services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_ENV: ${APP_ENV:-development}
    container_name: starterkit-app
    restart: always
    ports:
      - '8001:80'
      - '3000:3000'
      - '5173:5173'
    volumes:
      - .:/var/www/html
      - ./docker/NGINX/default.conf:/etc/nginx/sites-available/default
      - ./docker/SUPERVISOR/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf
    depends_on:
      - db
      - redis
      - mailpit
    environment:
      - APP_ENV=development
      - APP_DEBUG=true
      - CHOKIDAR_USEPOLLING=true
    networks:
      - starterkit-network

  db:
    image: postgres:latest
    container_name: starterkit-db
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_DB=starterkit
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./docker/PGSQL:/docker-entrypoint-initdb.d
    networks:
      - starterkit-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: starterkit-redis
    ports:
      - '6379:6379'
    networks:
      - starterkit-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  mailpit:
    image: axllent/mailpit:latest
    container_name: starterkit-mailpit
    ports:
      - '1025:1025'
      - '8025:8025'
    networks:
      - starterkit-network

volumes:
  pg_data:
    driver: local

networks:
  starterkit-network:
    driver: bridge
